File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\redux\counterSlice.js
==================================================
import { createSlice } from '@reduxjs/toolkit';

const counterSlice = createSlice({
    name: 'counter',
    initialState: {
        value: 0,
    },
    reducers: {
        increment: (state) => {
            state.value += 1;
        },
        decrement: (state) => {
            state.value -= 1;
        },
        reset: (state) => {
            state.value = 0;
        },
    },
});

export const { increment, decrement, reset } = counterSlice.actions;
export default counterSlice.reducer;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\redux\store.js
==================================================
import { configureStore } from '@reduxjs/toolkit';
import counterReducer from './counterSlice';

const store = configureStore({
    reducer: {
        counter: counterReducer,
    },
});

export default store;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\screens\lab1.js
==================================================
import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';

const Lab1 = () => {
    const [count, setCount] = useState(0);

    return (
        <View style={styles.container}>
            <Text style={styles.counterText}>Счетчик: {count}</Text>
            <TouchableOpacity style={styles.button} onPress={() => setCount(count + 1)}>
                <Text style={styles.buttonText}>Увеличить</Text>
            </TouchableOpacity>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#f2f2f2',
        padding: 20,
    },
    counterText: {
        fontSize: 24,
        marginBottom: 20,
        color: '#333',
    },
    button: {
        backgroundColor: '#4CAF50',
        paddingVertical: 12,
        paddingHorizontal: 25,
        borderRadius: 25,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.3,
        shadowRadius: 3.84,
        elevation: 5,
    },
    buttonText: {
        color: '#fff',
        fontSize: 18,
    },
});

export default Lab1;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\screens\lab2.js
==================================================
import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity } from 'react-native';

const Lab2 = () => {
    const [count, setCount] = useState(0);
    const [isRunning, setIsRunning] = useState(false);
    const [timeLeft, setTimeLeft] = useState(10); // Таймер на 10 секунд

    useEffect(() => {
        let timer;

        if (isRunning && timeLeft > 0) {
            timer = setInterval(() => {
                setTimeLeft((prevTime) => prevTime - 1);
            }, 1000);
        } else if (timeLeft === 0) {
            setIsRunning(false); // Останавливаем таймер
        }

        return () => clearInterval(timer); // Очистка таймера при размонтировании или изменении состояния
    }, [isRunning, timeLeft]);

    const handleClick = () => {
        if (isRunning) {
            setCount(count + 1);
        }
    };

    const startTimer = () => {
        setCount(0);
        setTimeLeft(10);
        setIsRunning(true);
    };

    return (
        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}>
            <Text style={{ fontSize: 24, marginBottom: 20 }}>Lab Two - Таймер</Text>
            <Text style={{ fontSize: 18 }}>Оставшееся время: {timeLeft} секунд</Text>
            <Text style={{ fontSize: 18 }}>Количество кликов: {count}</Text>

            <TouchableOpacity 
                style={{ 
                    backgroundColor: isRunning ? 'blue' : 'gray', // Меняем цвет кнопки в зависимости от состояния
                    padding: 10, 
                    borderRadius: 5, 
                    marginTop: 20 
                }} 
                onPress={handleClick}
                disabled={!isRunning} // Блокируем кнопку если таймер не запущен
            >
                <Text style={{ color: 'white', fontSize: 18 }}>Кликни меня!</Text>
            </TouchableOpacity>

            {!isRunning && (
                <TouchableOpacity 
                    style={{ 
                        backgroundColor: 'green', 
                        padding: 10, 
                        borderRadius: 5, 
                        marginTop: 10 
                    }} 
                    onPress={startTimer}
                >
                    <Text style={{ color: 'white', fontSize: 18 }}>Начать заново</Text>
                </TouchableOpacity>
            )}
        </View>
    );
};

export default Lab2;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\screens\lab3.js
==================================================
import React, { useMemo, useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';

const Lab3 = () => {
    const [numWithoutMemo, setNumWithoutMemo] = useState(0);
    const [numWithMemo, setNumWithMemo] = useState(0);

    const expensiveFunction = () => {
        let i = 0;
        while (i < 123456789) {
            i++;
        }
        return true;
    };

    const memoizedFunction = useMemo(expensiveFunction, []);

    const handleWithoutMemo = () => {
        expensiveFunction();
        setNumWithoutMemo(numWithoutMemo + 1);
    };

    const handleWithMemo = () => {
        memoizedFunction;
        setNumWithMemo(numWithMemo + 1);
    };

    return (
        <View style={styles.container}>
            <Text style={styles.header}>Без использования useMemo: {numWithoutMemo}</Text>
            <TouchableOpacity onPress={handleWithoutMemo} style={styles.button}>
                <Text style={styles.buttonText}>Нажми без useMemo</Text>
            </TouchableOpacity>
            <Text style={styles.header}>С использованием useMemo: {numWithMemo}</Text>
            <TouchableOpacity onPress={handleWithMemo} style={styles.button}>
                <Text style={styles.buttonText}>Нажми с useMemo</Text>
            </TouchableOpacity>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#f0f0f0',
        padding: 20,
    },
    header: {
        fontSize: 24,
        marginBottom: 20,
        color: '#333',
    },
    button: {
        backgroundColor: '#007bff',
        padding: 10,
        borderRadius: 5,
        marginBottom: 20,
        width: '80%',
        alignItems: 'center',
    },
    buttonText: {
        color: '#fff',
        fontSize: 18,
    },
});

export default Lab3;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\screens\lab4_2.js
==================================================
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import { useSelector } from 'react-redux';

const Lab4_2 = () => {
    const count = useSelector((state) => state.counter.value);

    return (
        <View style={styles.container}>
            <Text style={styles.title}>Текущее значение счетчика:</Text>
            <Text style={styles.countText}>{count}</Text>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#eef2f3',
        padding: 20,
    },
    title: {
        fontSize: 24,
        marginBottom: 10,
        color: '#333',
    },
    countText: {
        fontSize: 48,
        fontWeight: 'bold',
        color: '#4CAF50',
    },
});

export default Lab4_2;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\screens\lab4.js
==================================================
import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { useSelector, useDispatch } from 'react-redux';
import { increment, decrement, reset } from '../redux/counterSlice';

const Lab4 = () => {
    const count = useSelector((state) => state.counter.value);
    const dispatch = useDispatch();

    return (
        <View style={styles.container}>
            <Text style={styles.title}>Счетчик: {count}</Text>
            <View style={styles.buttonContainer}>
                <TouchableOpacity style={[styles.button, styles.incrementButton]} onPress={() => dispatch(increment())}>
                    <Text style={styles.buttonText}>Увеличить</Text>
                </TouchableOpacity>
                <TouchableOpacity style={[styles.button, styles.decrementButton]} onPress={() => dispatch(decrement())}>
                    <Text style={styles.buttonText}>Уменьшить</Text>
                </TouchableOpacity>
                <TouchableOpacity style={[styles.button, styles.resetButton]} onPress={() => dispatch(reset())}>
                    <Text style={styles.buttonText}>Сбросить</Text>
                </TouchableOpacity>
            </View>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#fafafa',
        padding: 20,
    },
    title: {
        fontSize: 28,
        marginBottom: 30,
        color: '#333',
    },
    buttonContainer: {
        width: '100%',
        alignItems: 'center',
    },
    button: {
        width: '80%',
        paddingVertical: 12,
        borderRadius: 25,
        marginVertical: 10,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.3,
        shadowRadius: 3.84,
        elevation: 5,
    },
    incrementButton: {
        backgroundColor: '#1E90FF',
    },
    decrementButton: {
        backgroundColor: '#FF6347',
    },
    resetButton: {
        backgroundColor: '#FFD700',
    },
    buttonText: {
        color: '#fff',
        fontSize: 18,
        textAlign: 'center',
    },
});

export default Lab4;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\App.js
==================================================
import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { Provider } from 'react-redux';
import store from './redux/store';
import Lab1 from './screens/lab1';
import Lab2 from './screens/lab2';
import Lab3 from './screens/lab3';
import Lab4 from './screens/lab4';
import Lab4_2 from './screens/lab4_2';
import { Ionicons } from '@expo/vector-icons'; // Иконки

const Tab = createBottomTabNavigator();

const App = () => {
    return (
        <Provider store={store}>
            <NavigationContainer>
                <Tab.Navigator
                    initialRouteName="Lab1"
                    screenOptions={({ route }) => ({
                        tabBarIcon: ({ focused, color, size }) => {
                            let iconName;

                            if (route.name === 'Lab1') {
                                iconName = focused ? 'ios-home' : 'ios-home-outline';
                            } else if (route.name === 'Lab2') {
                                iconName = focused ? 'ios-timer' : 'ios-timer-outline';
                            } else if (route.name === 'Lab3') {
                                iconName = focused ? 'ios-list' : 'ios-list-outline';
                            } else if (route.name === 'Lab4') {
                                iconName = focused ? 'ios-add-circle' : 'ios-add-circle-outline';
                            } else if (route.name === 'Lab4_2') {
                                iconName = focused ? 'ios-eye' : 'ios-eye-outline';
                            }

                            return <Ionicons name={iconName} size={size} color={color} />;
                        },
                        tabBarActiveTintColor: '#1E90FF',
                        tabBarInactiveTintColor: 'gray',
                        headerStyle: {
                            backgroundColor: '#1E90FF',
                        },
                        headerTintColor: '#fff',
                        tabBarStyle: {
                            backgroundColor: '#fff',
                            borderTopColor: '#1E90FF',
                            height: 60,
                            paddingBottom: 5,
                        },
                        tabBarLabelStyle: {
                            fontSize: 12,
                        },
                    })}
                >
                    <Tab.Screen name="Lab1" component={Lab1} options={{ title: 'Домой' }} />
                    <Tab.Screen name="Lab2" component={Lab2} options={{ title: 'Таймер' }} />
                    <Tab.Screen name="Lab3" component={Lab3} options={{ title: 'Список' }} />
                    <Tab.Screen name="Lab4" component={Lab4} options={{ title: 'Redux' }} />
                    <Tab.Screen name="Lab4_2" component={Lab4_2} options={{ title: 'Просмотр' }} />
                </Tab.Navigator>
            </NavigationContainer>
        </Provider>
    );
};

export default App;

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\app.json
==================================================
{
  "expo": {
    "name": "chomchoevAndreyNew",
    "slug": "chomchoevAndreyNew",
    "version": "1.0.0",
    "orientation": "portrait",
    "icon": "./assets/icon.png",
    "userInterfaceStyle": "light",
    "newArchEnabled": true,
    "splash": {
      "image": "./assets/splash-icon.png",
      "resizeMode": "contain",
      "backgroundColor": "#1E90FF"
    },
    "ios": {
      "supportsTablet": true
    },
    "android": {
      "adaptiveIcon": {
        "foregroundImage": "./assets/adaptive-icon.png",
        "backgroundColor": "#1E90FF"
      }
    },
    "web": {
      "favicon": "./assets/favicon.png"
    }
  }
}

==================================================


File Path: C:\Users\Arsenshmid\Desktop\studentHelp\chomchoevAndreyNew\index.js
==================================================
import { registerRootComponent } from 'expo';

import App from './App';

// registerRootComponent calls AppRegistry.registerComponent('main', () => App);
// It also ensures that whether you load the app in Expo Go or in a native build,
// the environment is set up appropriately
registerRootComponent(App);

==================================================


